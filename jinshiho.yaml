openapi: 3.1.0
info:
  version: '1.0'
  title: jinshiho
servers:
  - url: 'http://localhost:9000'
paths:
  '/users/{userId}':
    get:
      summary: Get User Info by User ID
      description: Retrieve the information of the user with the matching user ID.
      operationId: get-users-userId
      parameters:
        - name: userId
          in: path
          description: Id of an existing user.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    first_name: Alice
                    last_name: Smith
                    email: alice.smith@gmail.com
                    date_of_birth: '1997-10-31'
                    email_verified: true
                    signup_date: '2019-08-24'
        '404':
          description: User Not Found
      servers:
        - url: 'http://localhost:9000'
    patch:
      summary: Update User Information
      description: Update the information of an existing user.
      operationId: patch-users-userId
      parameters:
        - name: userId
          in: path
          description: Id of an existing user.
          required: true
          schema:
            type: integer
      requestBody:
        description: Patch user properties to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                date_of_birth:
                  type: string
            examples:
              Update First Name:
                value:
                  first_name: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    first_name: Rebecca
                    last_name: Baker
                    email: rebecca@gmail.com
                    date_of_birth: '1985-10-02'
                    email_verified: false
                    created_at: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      servers:
        - url: 'http://localhost:9000'
  /users:
    post:
      summary: Create New User
      description: Create a new user.
      operationId: post-user
      requestBody:
        description: Post the necessary fields for the API to create a new user.
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                date_of_birth:
                  type: string
                  format: date
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
            examples:
              Create User Bob Fellow:
                value:
                  first_name: Bob
                  last_name: Fellow
                  email: bob.fellow@gmail.com
                  date_of_birth: '1996-08-24'
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    first_name: Bob
                    last_name: Fellow
                    email: bob.fellow@gmail.com
                    date_of_birth: '1996-08-24'
                    email_verified: false
                    created_at: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      servers:
        - url: 'http://localhost:9000'
  /projects:
    get:
      summary: Your GET endpoint
      operationId: get-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
      servers:
        - url: 'http://localhost:9000'
components:
  schemas:
    User:
      type: object
      title: User
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        date_of_birth:
          type: string
          format: date
          examples:
            - '1997-10-31'
        email_verified:
          type: boolean
          description: Set to true if the user's email has been verified.
        created_at:
          type: string
          description: The date that the user was created.
          format: date
      required:
        - id
        - first_name
        - last_name
        - email
        - email_verified
      examples:
        - id: 142
          first_name: Alice
          last_name: Smith
          email: alice.smith@gmail.com
          date_of_birth: '1997-10-31'
          email_verified: true
          signup_date: '2019-08-24'
    Project:
      type: object
      title: Project
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        cretaed_at:
          type: string
          format: date
      required:
        - id
        - name
        - code
        - cretaed_at
